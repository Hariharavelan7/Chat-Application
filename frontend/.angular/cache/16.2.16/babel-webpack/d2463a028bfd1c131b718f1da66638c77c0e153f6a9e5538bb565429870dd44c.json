{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { AuthService } from './services/auth.service';\nimport { ChatService } from './services/chat.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { TokenInterceptor } from './interceptors/token.interceptor';\nimport * as i0 from \"@angular/core\";\nexport class AppModule {\n  static {\n    this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [AuthService, ChatService, AuthGuard, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: TokenInterceptor,\n        multi: true\n      }],\n      imports: [BrowserModule, AppRoutingModule, FormsModule, ReactiveFormsModule, HttpClientModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, AuthComponent, ChatComponent],\n    imports: [BrowserModule, AppRoutingModule, FormsModule, ReactiveFormsModule, HttpClientModule]\n  });\n})();","map":{"version":3,"names":["BrowserModule","FormsModule","ReactiveFormsModule","HttpClientModule","HTTP_INTERCEPTORS","AppRoutingModule","AppComponent","AuthComponent","ChatComponent","AuthService","ChatService","AuthGuard","TokenInterceptor","AppModule","bootstrap","provide","useClass","multi","imports","declarations"],"sources":["/var/www/html/chat-applictaion/frontend/src/app/app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { AuthService } from './services/auth.service';\nimport { ChatService } from './services/chat.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { TokenInterceptor } from './interceptors/token.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    ChatComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    AuthService,\n    ChatService,\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n"],"mappings":"AACA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,gBAAgB;AACjE,SAASC,gBAAgB,EAAEC,iBAAiB,QAAQ,sBAAsB;AAE1E,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,gBAAgB,QAAQ,kCAAkC;;AA2BnE,OAAM,MAAOC,SAAS;;;uBAATA,SAAS;IAAA;EAAA;;;YAATA,SAAS;MAAAC,SAAA,GAFRR,YAAY;IAAA;EAAA;;;iBAVb,CACTG,WAAW,EACXC,WAAW,EACXC,SAAS,EACT;QACEI,OAAO,EAAEX,iBAAiB;QAC1BY,QAAQ,EAAEJ,gBAAgB;QAC1BK,KAAK,EAAE;OACR,CACF;MAAAC,OAAA,GAfClB,aAAa,EACbK,gBAAgB,EAChBJ,WAAW,EACXC,mBAAmB,EACnBC,gBAAgB;IAAA;EAAA;;;2EAcPU,SAAS;IAAAM,YAAA,GAvBlBb,YAAY,EACZC,aAAa,EACbC,aAAa;IAAAU,OAAA,GAGblB,aAAa,EACbK,gBAAgB,EAChBJ,WAAW,EACXC,mBAAmB,EACnBC,gBAAgB;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}