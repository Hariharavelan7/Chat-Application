{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction AuthComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nfunction AuthComponent_div_6_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"label\", 17);\n    i0.ɵɵtext(2, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 18);\n    i0.ɵɵtemplate(4, AuthComponent_div_6_div_4_Template, 2, 0, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r1.authForm.get(\"name\")) == null ? null : tmp_0_0.invalid) && ((tmp_0_0 = ctx_r1.authForm.get(\"name\")) == null ? null : tmp_0_0.touched));\n  }\n}\nfunction AuthComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_div_11_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Please enter a valid email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, AuthComponent_div_11_div_1_Template, 2, 0, \"div\", 20);\n    i0.ɵɵtemplate(2, AuthComponent_div_11_div_2_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.authForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r2.authForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\nfunction AuthComponent_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_div_16_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, AuthComponent_div_16_div_1_Template, 2, 0, \"div\", 20);\n    i0.ɵɵtemplate(2, AuthComponent_div_16_div_2_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r3.authForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r3.authForm.get(\"password\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nexport class AuthComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.isLogin = true;\n    this.isLoading = false;\n    this.errorMessage = '';\n    this.authForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['user1@example.com', [Validators.required, Validators.email]],\n      password: ['password123', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  toggleMode() {\n    this.isLogin = !this.isLogin;\n    this.errorMessage = '';\n    if (this.isLogin) {\n      this.authForm.get('name')?.clearValidators();\n      this.authForm.get('name')?.updateValueAndValidity();\n    } else {\n      this.authForm.get('name')?.setValidators([Validators.required]);\n      this.authForm.get('name')?.updateValueAndValidity();\n    }\n  }\n  onSubmit() {\n    console.log('Form submitted, valid:', this.authForm.valid);\n    console.log('Form value:', this.authForm.value);\n    if (this.authForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = '';\n      const {\n        email,\n        password,\n        name\n      } = this.authForm.value;\n      const authObservable = this.isLogin ? this.authService.login(email, password) : this.authService.register(email, password, name);\n      authObservable.subscribe({\n        next: response => {\n          console.log('Auth successful:', response);\n          this.isLoading = false;\n          this.router.navigate(['/chat']);\n        },\n        error: error => {\n          console.error('Auth error:', error);\n          this.isLoading = false;\n          this.errorMessage = error.error?.message || 'An error occurred. Please try again.';\n        }\n      });\n    } else {\n      console.log('Form is invalid');\n      this.errorMessage = 'Please fill in all required fields correctly.';\n    }\n  }\n  static {\n    this.ɵfac = function AuthComponent_Factory(t) {\n      return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AuthComponent,\n      selectors: [[\"app-auth\"]],\n      decls: 24,\n      vars: 13,\n      consts: [[1, \"auth-container\"], [1, \"auth-form\"], [1, \"text-center\", \"mb-3\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"form-group\", 4, \"ngIf\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Enter your email\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter your password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", 3, \"disabled\", \"click\"], [1, \"mt-2\", \"small\", \"text-muted\"], [1, \"text-center\", \"mt-3\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"disabled\", \"click\"], [1, \"alert\", \"alert-danger\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"Enter your name\", 1, \"form-control\"], [1, \"text-danger\"], [4, \"ngIf\"]],\n      template: function AuthComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, AuthComponent_div_4_Template, 2, 1, \"div\", 3);\n          i0.ɵɵelementStart(5, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵtemplate(6, AuthComponent_div_6_Template, 5, 1, \"div\", 5);\n          i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\", 7);\n          i0.ɵɵtext(9, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 8);\n          i0.ɵɵtemplate(11, AuthComponent_div_11_Template, 3, 2, \"div\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 6)(13, \"label\", 10);\n          i0.ɵɵtext(14, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"input\", 11);\n          i0.ɵɵtemplate(16, AuthComponent_div_16_Template, 3, 2, \"div\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_17_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵtext(18);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 13);\n          i0.ɵɵtext(20);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\", 14)(22, \"button\", 15);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_22_listener() {\n            return ctx.toggleMode();\n          });\n          i0.ɵɵtext(23);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_8_0;\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.isLogin ? \"Login\" : \"Register\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.authForm);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLogin);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.authForm.get(\"email\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.authForm.get(\"email\")) == null ? null : tmp_4_0.touched));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.authForm.get(\"password\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx.authForm.get(\"password\")) == null ? null : tmp_5_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.isLoading ? \"Please wait...\" : ctx.isLogin ? \"Login\" : \"Register\", \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate3(\" Form valid: \", ctx.authForm.valid, \" | Email valid: \", (tmp_8_0 = ctx.authForm.get(\"email\")) == null ? null : tmp_8_0.valid, \" | Password valid: \", (tmp_8_0 = ctx.authForm.get(\"password\")) == null ? null : tmp_8_0.valid, \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.isLogin ? \"Need an account? Register\" : \"Already have an account? Login\", \" \");\n        }\n      },\n      dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","errorMessage","ɵɵelement","ɵɵtemplate","AuthComponent_div_6_div_4_Template","ɵɵproperty","tmp_0_0","ctx_r1","authForm","get","invalid","touched","AuthComponent_div_11_div_1_Template","AuthComponent_div_11_div_2_Template","ctx_r2","errors","tmp_1_0","AuthComponent_div_16_div_1_Template","AuthComponent_div_16_div_2_Template","ctx_r3","AuthComponent","constructor","fb","authService","router","isLogin","isLoading","group","name","required","email","password","minLength","toggleMode","clearValidators","updateValueAndValidity","setValidators","onSubmit","console","log","valid","value","authObservable","login","register","subscribe","next","response","navigate","error","message","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","selectors","decls","vars","consts","template","AuthComponent_Template","rf","ctx","AuthComponent_div_4_Template","ɵɵlistener","AuthComponent_Template_form_ngSubmit_5_listener","AuthComponent_div_6_Template","AuthComponent_div_11_Template","AuthComponent_div_16_Template","AuthComponent_Template_button_click_17_listener","AuthComponent_Template_button_click_22_listener","ɵɵtextInterpolate","tmp_4_0","tmp_5_0","ɵɵtextInterpolate3","tmp_8_0"],"sources":["/var/www/html/chat-applictaion/frontend/src/app/auth/auth.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-auth',\n  template: `\n    <div class=\"auth-container\">\n      <div class=\"auth-form\">\n        <h2 class=\"text-center mb-3\">{{ isLogin ? 'Login' : 'Register' }}</h2>\n        \n        <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\n          {{ errorMessage }}\n        </div>\n\n        <form [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"form-group\" *ngIf=\"!isLogin\">\n            <label for=\"name\">Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              class=\"form-control\"\n              formControlName=\"name\"\n              placeholder=\"Enter your name\"\n            />\n            <div *ngIf=\"authForm.get('name')?.invalid && authForm.get('name')?.touched\" class=\"text-danger\">\n              Name is required\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              class=\"form-control\"\n              formControlName=\"email\"\n              placeholder=\"Enter your email\"\n            />\n            <div *ngIf=\"authForm.get('email')?.invalid && authForm.get('email')?.touched\" class=\"text-danger\">\n              <div *ngIf=\"authForm.get('email')?.errors?.['required']\">Email is required</div>\n              <div *ngIf=\"authForm.get('email')?.errors?.['email']\">Please enter a valid email</div>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              class=\"form-control\"\n              formControlName=\"password\"\n              placeholder=\"Enter your password\"\n            />\n            <div *ngIf=\"authForm.get('password')?.invalid && authForm.get('password')?.touched\" class=\"text-danger\">\n              <div *ngIf=\"authForm.get('password')?.errors?.['required']\">Password is required</div>\n              <div *ngIf=\"authForm.get('password')?.errors?.['minlength']\">Password must be at least 6 characters</div>\n            </div>\n          </div>\n\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary btn-block\"\n            [disabled]=\"isLoading\"\n            (click)=\"onSubmit()\"\n          >\n            {{ isLoading ? 'Please wait...' : (isLogin ? 'Login' : 'Register') }}\n          </button>\n          \n          <!-- Debug info -->\n          <div class=\"mt-2 small text-muted\">\n            Form valid: {{ authForm.valid }} | \n            Email valid: {{ authForm.get('email')?.valid }} | \n            Password valid: {{ authForm.get('password')?.valid }}\n          </div>\n        </form>\n\n        <div class=\"text-center mt-3\">\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            (click)=\"toggleMode()\"\n            [disabled]=\"isLoading\"\n          >\n            {{ isLogin ? 'Need an account? Register' : 'Already have an account? Login' }}\n          </button>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: []\n})\nexport class AuthComponent {\n  authForm: FormGroup;\n  isLogin = true;\n  isLoading = false;\n  errorMessage = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.authForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['user1@example.com', [Validators.required, Validators.email]],\n      password: ['password123', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  toggleMode(): void {\n    this.isLogin = !this.isLogin;\n    this.errorMessage = '';\n    \n    if (this.isLogin) {\n      this.authForm.get('name')?.clearValidators();\n      this.authForm.get('name')?.updateValueAndValidity();\n    } else {\n      this.authForm.get('name')?.setValidators([Validators.required]);\n      this.authForm.get('name')?.updateValueAndValidity();\n    }\n  }\n\n  onSubmit(): void {\n    console.log('Form submitted, valid:', this.authForm.valid);\n    console.log('Form value:', this.authForm.value);\n    \n    if (this.authForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = '';\n\n      const { email, password, name } = this.authForm.value;\n\n      const authObservable = this.isLogin\n        ? this.authService.login(email, password)\n        : this.authService.register(email, password, name);\n\n      authObservable.subscribe({\n        next: (response) => {\n          console.log('Auth successful:', response);\n          this.isLoading = false;\n          this.router.navigate(['/chat']);\n        },\n        error: (error) => {\n          console.error('Auth error:', error);\n          this.isLoading = false;\n          this.errorMessage = error.error?.message || 'An error occurred. Please try again.';\n        }\n      });\n    } else {\n      console.log('Form is invalid');\n      this.errorMessage = 'Please fill in all required fields correctly.';\n    }\n  }\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}